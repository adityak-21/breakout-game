name: Performance Service Validation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  validate-metrics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate Performance Metrics
        run: |
          echo "Validating performance metrics in ./output-server.log..."

          if grep -q 'http_req_duration:' ./output-server.log; then
            awk '/http_req_duration:/ { if ($5 > 2000) { print "ERROR: HTTP request duration exceeds 2 seconds: " $5; exit 1; } }' ./output-server.log || true
          fi

          if grep -q 'iteration_duration:' ./output-server.log; then
            awk '/iteration_duration:/ { if ($5 > 9000) { print "ERROR: Iteration duration exceeds 9 seconds: " $5; exit 1; } }' ./output-server.log || true
          fi

          if grep -q 'data_received:' ./output-server.log; then
            awk '/data_received:/ { if ($3 < 500) { print "WARNING: Data received is less than expected: " $3; } }' ./output-server.log || true
          fi

          if grep -q 'http_req_failed:' ./output-server.log; then
            awk '/http_req_failed:/ { if ($3 > 0) { print "ERROR: HTTP request failures detected: " $3; exit 1; } }' ./output-server.log || true
          fi

          if grep -q 'http_req_tls_handshaking:' ./output-server.log; then
            awk '/http_req_tls_handshaking:/ { if ($5 > 500) { print "ERROR: TLS handshaking exceeds 500ms: " $5; exit 1; } }' ./output-server.log || true
          fi

          if grep -q 'http_req_waiting:' ./output-server.log; then
            awk '/http_req_waiting:/ { if ($5 > 3000) { print "ERROR: HTTP waiting time exceeds 3 seconds: " $5; exit 1; } }' ./output-server.log || true
          fi

          if grep -q 'POST status is 201' ./output-server.log; then
            awk '/POST status is 201/ { if ($4 != 201) { print "ERROR: POST status is not 201: " $4; exit 1; } }' ./output-server.log || true
          else
            echo "ERROR: POST status not found in log."; exit 1
          fi

          if grep -q 'GET status is 200' ./output-server.log; then
            awk '/GET status is 200/ { if ($4 != 200) { print "ERROR: GET status is not 200: " $4; exit 1; } }' ./output-server.log || true
          else
            echo "ERROR: GET status not found in log."; exit 1
          fi

          echo "Performance metrics validation completed. All parameters are within acceptable limits."